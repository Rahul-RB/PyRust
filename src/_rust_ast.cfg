# TODO: eliminate the need for this file after finalising the nodes of the AST

#-----------------------------------------------------------------
# Defines the AST Node classes used in pycparser.
#
# Each entry is a Node sub-class name, listing the attributes
# and child nodes of the class:
#   <name>*     - a child node
#   <name>**    - a sequence of child nodes
#   <name>      - an attribute
#
#-----------------------------------------------------------------

# # ArrayDecl is a nested declaration of an array with the given type.
# # dim: the dimension (for example, constant 42)
# # dim_quals: list of dimension qualifiers, to support C99's allowing 'const' and 'static' within the array dimension in function declarations.
# ArrayDecl: [type*, dim*, dim_quals]

# ArrayRef: [name*, subscript*]

Assignment: [op, lvalue*, rvalue*]

BinaryOp: [op, left*, right*]

# Compound statement is a list of block items (declarations or
# statements).
Compound: [block_items**]

# type: int, char, float, etc. see CLexer for constant token types
Constant: [type, value]

# name: the variable being declared
# type: declaration type (probably nested with all the modifiers)
# init: initialization value, or None
Declaration: [name, type*, init*]

# This is the top of the AST, representing a single Rust file.
FileAST: [ext**]

ID: [name]

If: [cond*, iftrue*, iffalse*]

UnaryOp: [op, expr*]

While: [cond*, stmt*]
